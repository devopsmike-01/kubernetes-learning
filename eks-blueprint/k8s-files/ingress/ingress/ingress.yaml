---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/load-balancer-name: prestigious-alb
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}] | [{"HTTPS": 443}]'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:124355672501:certificate/4d8c75a6-f443-4a4f-8716-d71201b7ee37
    alb.ingress.kubernetes.io/target-type: ip
  labels:
    run: app
spec:
  ingressClassName: alb
  rules:
    - http:
         paths:
           - path: /vote
             pathType: Prefix
             backend:
               service:
                 name: blue-service
                 port:
                   number: 8080

# --- 

# # https://kubernetes.io/docs/concepts/services-networking/ingress/#tls

# apiVersion: v1
# kind: Secret
# metadata:
#   name: testsecret-tls
#   namespace: default
# type: kubernetes.io/tls
# # The TLS secret must contain keys named 'tls.crt' and 'tls.key' that contain the certificate and private key to use for TLS.
# data:
#   tls.crt: base64 encoded public key content
#   tls.key: base64 encoded private key content

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: tls-example-ingress
#   namespace: default
# spec:
#   rules:
#   - host: https-example.foo.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: service1
#             port:
#               number: 80